type OrderMenu @model @key(name: "byOrder", fields: ["orderID"]) @key(name: "byUser", fields: ["userID"]) @auth(rules: [{allow: private}, {allow: public}, {allow: private, provider: iam}]) {
  id: ID!
  menu: String!
  price: Int!
  quantity: Int!
  orderID: ID
  userID: ID
}

type Order @model @key(name: "byUser", fields: ["userID"]) @key(name: "byChatRoom", fields: ["chatroomID"]) @auth(rules: [{allow: private}, {allow: public}, {allow: private, provider: iam}]) {
  id: ID!
  store: String!
  orderDateTime: AWSDateTime!
  paymentAmount: Int!
  userID: ID
  chatroomID: ID
  OrderMenus: [OrderMenu] @connection(keyName: "byOrder", fields: ["id"])
}

type StoreCategory @model @auth(rules: [{allow: private}, {allow: public}, {allow: private, provider: iam}]) {
  id: ID!
  category: String!
  Stores: [Store] @connection(keyName: "byStoreCategory", fields: ["id"])
}

type Store @model @key(name: "byStoreCategory", fields: ["storecategoryID"]) @auth(rules: [{allow: private}, {allow: public}, {allow: private, provider: iam}]) {
  id: ID!
  store: String!
  storeImgUri: String
  minOrdPrice: Int!
  minDlvTime: Int!
  maxDlvTime: Int!
  maxDlvTip: Int!
  openHours: String!
  location: String
  Menus: [Menu] @connection(keyName: "byStore", fields: ["id"])
  storecategoryID: ID
  baeminUri: String
  telephoneNumber: String
}

type Menu @model @key(name: "byStore", fields: ["storeID"]) @auth(rules: [{allow: private}, {allow: public}, {allow: private, provider: iam}]) {
  id: ID!
  menuCategory: String!
  menu: String!
  menuImgUri: String
  menuDetail: String
  price: Int!
  storeID: ID
}

type ChatRoom @model @auth(rules: [{allow: private}]) {
  id: ID!
  newMessages: Int
  LastMessage: Message @connection
  ChatRoomUsers: [ChatRoomUser] @connection(keyName: "byChatRoom", fields: ["id"])
  matchingInfo: AWSJSON
  Orders: [Order] @connection(keyName: "byChatRoom", fields: ["id"])
}

type Message @model @key(name: "byChatRoom", fields: ["userID"]) @key(name: "byUser", fields: ["userID"]) @auth(rules: [{allow: private}, {allow: public}, {allow: private, provider: iam}]) {
  id: ID!
  content: String!
  chatroomID: ID
  userID: ID
}

type User @model @auth(rules: [{allow: private}, {allow: public}, {allow: private, provider: iam}]) {
  id: ID!
  name: String!
  imageUri: String
  status: String
  chatrooms: [ChatRoomUser] @connection(keyName: "byUser", fields: ["id"])
  Messages: [Message] @connection(keyName: "byUser", fields: ["id"])
  halfmoney: Int
  Orders: [Order] @connection(keyName: "byUser", fields: ["id"])
  OrderMenus: [OrderMenu] @connection(keyName: "byUser", fields: ["id"])
  school: String
  dormitory: String
  nickname: String
}

type ChatRoomUser @model(queries: null) @key(name: "byChatRoom", fields: ["chatroomID", "userID"]) @key(name: "byUser", fields: ["userID", "chatroomID"]) @auth(rules: [{allow: private}, {allow: private}, {allow: public}]) {
  id: ID!
  chatroomID: ID!
  userID: ID!
  chatroom: ChatRoom! @connection(fields: ["chatroomID"])
  user: User! @connection(fields: ["userID"])
}
 
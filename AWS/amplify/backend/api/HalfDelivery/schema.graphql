enum Platform {
  BAEMIN
  YOGIYO
  COUPANG
}

enum MatchingType {
  MIN_PRICE
  DLV_TIP
}

type MatchingInfo @model @auth(rules: [{allow: public}]) {
  id: ID!
  requiredPersons: Int!
  setTime: Int!
  type: MatchingType!
  platform: Platform!
  StoreCategoryInfo: StoreCategory @hasOne
  StoreInfo: Store @hasOne
}

type Participant @model @auth(rules: [{allow: public}]) {
  id: ID!
  orderImages: AWSJSON
  orderPrice: Int!
  isMaster: Boolean!
  LinkedUser: User @hasOne
  LinkedChatRoom: ID! @index(name: "byChatRoom")
  Messages: [Message] @hasMany(indexName: "byParticipant", fields: ["id"])
  isReady: Boolean!
  isFinished: Boolean!
}

type StoreCategory @model @auth(rules: [{allow: public}]) {
  id: ID!
  category: String!
  Stores: [Store] @hasMany(indexName: "byStoreCategory", fields: ["id"])
}

type Store @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  imgUri: String
  openHours: AWSJSON!
  location: String
  baeminUri: String
  yogiyoUri: String
  coupangUri: String
  storecategoryID: ID! @index(name: "byStoreCategory")
  baeminDlvTip: AWSJSON
  yogiyoDlvTip: AWSJSON
  coupangDlvTip: AWSJSON
  baeminOrderPrice: Int
  yogiyoOrderPrice: Int
  coupangOrderPrice: Int
}

type ChatRoom @model @auth(rules: [{allow: public}]) {
  id: ID!
  newMessages: Int
  master: String!
  onSetting: Boolean!
  LastMessage: Message @hasOne
  Participants: [Participant] @hasMany(indexName: "byChatRoom", fields: ["id"])
  LinkedMatchingInfo: MatchingInfo @hasOne
}

type Message @model @auth(rules: [{allow: public}]) {
  id: ID!
  content: String
  chatroomID: ID
  image: String
  audio: String
  participantID: ID! @index(name: "byParticipant")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  imageUri: String
  phone_number: String
  bank: String
  accountnumber: String
  school: String
  college: String
  birthday: String
  bannedDateTime: AWSDateTime
  agree: Boolean
  banUserList: [String]
}
 